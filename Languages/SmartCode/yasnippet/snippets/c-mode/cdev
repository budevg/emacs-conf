# -*- mode: snippet -*-
# name: cdev
# key: cdev
# --
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/fs.h>
#include <linux/cdev.h>

#define ${1:$(upcase text)}_MAJOR (999)
#define ${1:$(upcase text)}_MAX_MINORS (4)
#define ${1:$(upcase text)}_NAME "xxx"

static struct cdev test_cdev;
static const struct file_operations test_fops = {
  .owner  =  THIS_MODULE,
};


static int __init ${1:module_name}_init(void)
{
  int ret = 0;
  dev_t dev = MKDEV(${1:$(upcase text)}_MAJOR, 0);

  ret = register_chrdev_region(dev, ${1:$(upcase text)}_MAX_MINORS, ${1:$(upcase text)}_NAME);
  if (ret)
    goto error;

  cdev_init(&$1_cdev, &$1_fops);

  ret = cdev_add(&$1_cdev, dev, ${1:$(upcase text)}_MAX_MINORS);
  if (ret) {
    goto unregister_chrdev;
  }

  printk(KERN_INFO "test init");

  return 0;

unregister_chrdev:
  unregister_chrdev_region(dev, ${1:$(upcase text)}_MAX_MINORS);
error:
  return ret;
}

static void __exit $1_exit(void)
{
  cdev_del(&$1_cdev);
  unregister_chrdev_region(MKDEV(${1:$(upcase text)}_MAJOR, 0), ${1:$(upcase text)}_MAX_MINORS);
  printk(KERN_INFO "test exit");
}

module_init($1_init);
module_exit($1_exit);
